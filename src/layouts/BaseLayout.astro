---
export interface Props {
  title: string;
  description?: string;
  image?: string;
}

const {
  title,
  description = "Personal portfolio for Piyush Satti, a Software Developer showcasing projects, research, and blog posts.",
  image,
} = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const base = import.meta.env.BASE_URL.endsWith("/")
  ? import.meta.env.BASE_URL
  : import.meta.env.BASE_URL + "/";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href={`${base}favicon.svg`} />
    <link
      rel="alternate icon"
      type="image/x-icon"
      href={`${base}favicon.ico`}
    />
    <meta name="generator" content={Astro.generator} />

    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />

    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    {image && <meta property="og:image" content={new URL(image, Astro.url)} />}

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    {image && <meta name="twitter:image" content={new URL(image, Astro.url)} />}

    <link rel="sitemap" href={`${base}sitemap.xml`} />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="RSS"
      href={`${base}rss.xml`}
    />
    <script
      type="application/ld+json"
      set:html={`
    {
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "Piyush Satti",
      "url": "${canonicalURL}",
      "sameAs": [
        "https://github.com/piyushsatti",
        "https://www.linkedin.com/in/piyush-satti/",
        "https://scholar.google.ca/citations?user=eR10c10AAAAJ&hl=en"
      ],
      "jobTitle": "Software Developer"
    }
    `}
    />
  </head>
  <body>
    <div class="container center">
      <header class="header">
        <div class="header__inner">
          <div class="header__logo">
            <a href={base}>
              <div class="logo">Terminal>>Pi(π)</div>
            </a>
          </div>
          <!-- Menu for mobile -->
          <ul class="menu menu--mobile">
            <li class="menu__trigger">Menu ▾</li>
            <li>
              <ul class="menu__dropdown">
                <li><a href={base}>Home</a></li>
                <li>
                  <a
                    href={`${base}resume.pdf`}
                    target="_blank"
                    rel="noopener noreferrer">Resume</a
                  >
                </li>
                <li><a href={`${base}projects`}>Projects</a></li>
                <li><a href={`${base}research`}>Research</a></li>
                <li><a href={`${base}blog`}>Blog</a></li>
                <li><a href={`${base}hobbies`}>Hobbies</a></li>
                <li><a href={`${base}contact`}>Contact</a></li>
              </ul>
            </li>
          </ul>
        </div>
        <!-- Menu for desktop -->
        <nav class="navigation-menu">
          <ul class="navigation-menu__inner menu--desktop">
            <li><a href={base}>Home</a></li>
            <li><a href={`${base}about`}>whoami π</a></li>
            <li><a href={`${base}resume.pdf`} target="_blank" rel="noopener noreferrer">Resume</a></li>
            <li><a href={`${base}projects`}>Projects</a></li>
            <li><a href={`${base}research`}>Research</a></li>
            <li><a href={`${base}blog`}>Blog</a></li>
            <li><a href={`${base}hobbies`}>Hobbies</a></li>
            <li><a href={`${base}contact`}>Contact</a></li>
          </ul>
        </nav>
      </header>
    <!-- main -->
    <main class="content">
      <slot />
    </main>
    <!-- Footer -->
    <footer class="footer">
      <div class="footer__inner">
        <div>
          <a
            href="https://github.com/piyushsatti"
            target="_blank"
            rel="noopener noreferrer">GitHub</a
          >
          <span class="separator">::</span>
          <a
            href="https://www.linkedin.com/in/piyush-satti/"
            target="_blank"
            rel="noopener noreferrer">LinkedIn</a
          >
          <span class="separator">::</span>
          <a
            href="https://scholar.google.ca/citations?user=eR10c10AAAAJ&hl=en"
            target="_blank"
            rel="noopener noreferrer">Google Scholar</a
          >
        </div>
        <div class="copyright">
          <span
            >© {new Date().getFullYear()} Powered by <a
              href="https://astro.build">Astro</a
            ></span
          >
          <span class="separator">::</span>
          <span
            >Theme made by <a
              href="https://github.com/panr/hugo-theme-terminal"
              target="_blank">panr</a
            ></span
          >
        </div>
      </div>
    </footer>
    </div>

    <script>
      // Menu functionality
      (() => {
        const menuTrigger = document.querySelector(".menu-trigger");
        const mobileMenu = document.querySelector(".navigation-menu-mobile");

        if (menuTrigger && mobileMenu) {
          menuTrigger.addEventListener("click", () => {
            mobileMenu.classList.toggle("open");
            menuTrigger.classList.toggle("open");
          });
        }

        const container = document.querySelector(".container");
        const menus = document.querySelectorAll(".menu");

        // Close menus when clicking outside
        document.body.addEventListener("click", () => {
          menus.forEach((menu) => {
            if (menu.classList.contains("open")) {
              menu.classList.remove("open");
            }
          });
        });

        // Close menus on window resize
        window.addEventListener("resize", () => {
          menus.forEach((menu) => {
            menu.classList.remove("open");
          });
        });

        // Menu trigger functionality
        menus.forEach((menu) => {
          const trigger = menu.querySelector(".menu__trigger");
          const dropdown = menu.querySelector(".menu__dropdown");

          if (trigger && dropdown) {
            trigger.addEventListener("click", (event) => {
              event.stopPropagation();

              if (menu.classList.contains("open")) {
                menu.classList.remove("open");
              } else {
                // Close other menus
                menus.forEach((m) => m.classList.remove("open"));
                menu.classList.add("open");
              }

              // Adjust dropdown position if it goes outside container
              if (
                container &&
                dropdown.getBoundingClientRect().right >
                  container.getBoundingClientRect().right
              ) {
                (dropdown as HTMLElement).style.left = "auto";
                (dropdown as HTMLElement).style.right = "0";
              }
            });

            dropdown.addEventListener("click", (e) => e.stopPropagation());
          }
        });
      })();
    </script>
  </body>
</html>

<style is:global>
  /* Import all CSS files in the correct order */
  @import "../styles/terminal.css";
  @import "../styles/fonts.css";
  @import "../styles/main.css";
  @import "../styles/header.css";
  @import "../styles/menu.css";
  @import "../styles/footer.css";
  @import "../styles/buttons.css";
  @import "../styles/post.css";
  @import "../styles/pagination.css";
  @import "../styles/code.css";
  @import "../styles/syntax.css";
  @import "../styles/gist.css";
  @import "../styles/terms.css";
</style>
