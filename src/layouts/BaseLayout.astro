---
import SiteHeader from "../components/site/SiteHeader.astro";
import SiteFooter from "../components/site/SiteFooter.astro";

export interface Props {
  title: string;
  description?: string;
  image?: string;
  bodyClass?: string;
}

const {
  title,
  description = "Personal portfolio for Piyush Satti, a Software Developer showcasing projects, research, and blog posts.",
  image,
  bodyClass,
} = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const base = import.meta.env.BASE_URL.endsWith("/")
  ? import.meta.env.BASE_URL
  : import.meta.env.BASE_URL + "/";
const siteName = "Piyush Satti";
const analyticsId = import.meta.env.PUBLIC_GA_MEASUREMENT_ID;
const enableAnalytics =
  typeof analyticsId === "string" && analyticsId.length > 0;

const navItems = [
  { label: "Home", href: base },
  { label: "whoami", href: `${base}about` },
  {
    label: "Resume",
    href: `${base}resume.pdf`,
    external: true,
  },
  { label: "Projects", href: `${base}projects` },
  { label: "Research", href: `${base}research` },
  { label: "Blog", href: `${base}blog` },
  { label: "Hobbies", href: `${base}hobbies` },
  { label: "Contact", href: `${base}contact` },
];
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href={`${base}favicon.svg`} />
    <link
      rel="alternate icon"
      type="image/x-icon"
      href={`${base}favicon.ico`}
    />
    <meta name="generator" content={Astro.generator} />
    <meta name="author" content="Piyush Satti" />
    <meta name="robots" content="index,follow" />
    <meta
      name="theme-color"
      content="#1a170f"
      media="(prefers-color-scheme: dark)"
    />
    <meta
      name="theme-color"
      content="#f4efe4"
      media="(prefers-color-scheme: light)"
    />

    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />

    <meta property="og:site_name" content={siteName} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    {image && <meta property="og:image" content={new URL(image, Astro.url)} />}

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@satti_piyush" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    {image && <meta name="twitter:image" content={new URL(image, Astro.url)} />}

    {
      enableAnalytics && (
        <>
          <script
            async
            src={`https://www.googletagmanager.com/gtag/js?id=${analyticsId}`}
          />
          <script
            is:inline
            set:html={`
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', '${analyticsId}', {
              anonymize_ip: true,
              page_path: window.location.pathname
            });
          `.trim()}
          />
        </>
      )
    }

    <script is:inline>
      (() => {
        const storageKey = "terminal-theme-preference";
        const root = document.documentElement;

        try {
          const stored = localStorage.getItem(storageKey);
          if (stored === "light" || stored === "dark") {
            root.setAttribute("data-theme", stored);
            return;
          }

          if (
            window.matchMedia &&
            window.matchMedia("(prefers-color-scheme: light)").matches
          ) {
            root.setAttribute("data-theme", "light");
          }
        } catch (error) {
          console.warn("Unable to synchronise theme preference", error);
        }
      })();
    </script>

    <link rel="sitemap" href={`${base}sitemap.xml`} />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="RSS"
      href={`${base}rss.xml`}
    />
    {Astro.slots.has("head") && <slot name="head" />}
    <script
      type="application/ld+json"
      set:html={`
    {
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "Piyush Satti",
      "url": "${canonicalURL}",
      "sameAs": [
        "https://github.com/piyushsatti",
        "https://www.linkedin.com/in/piyush-satti/",
        "https://scholar.google.ca/citations?user=eR10c10AAAAJ&hl=en"
      ],
      "jobTitle": "Software Developer"
    }
    `}
    />
  </head>
  <body class={bodyClass}>
    <div class="container center">
      <SiteHeader navItems={navItems} />
      <main class="content">
        <slot />
      </main>
      <SiteFooter />
    </div>
  </body>
</html>

<style is:global>
  /* Import all CSS files in the correct order */
  @import "../styles/theme.css";
  @import "../styles/terminal.css";
  @import "../styles/fonts.css";
  @import "../styles/main.css";
  @import "../styles/home.css";
  @import "../styles/header.css";
  @import "../styles/menu.css";
  @import "../styles/footer.css";
  @import "../styles/buttons.css";
  @import "../styles/listing-card.css";
  @import "../styles/post.css";
  @import "../styles/pagination.css";
  @import "../styles/code.css";
  @import "../styles/syntax.css";
  @import "../styles/gist.css";
  @import "../styles/terms.css";
  @import "../styles/pages.css";
</style>
