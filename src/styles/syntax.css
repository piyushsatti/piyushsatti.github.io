/* Syntax highlighting theme for Astro Terminal theme */
/* This uses a monochrome approach where all syntax elements are in accent color */

/* Astro/Shiki CSS Variables for monochrome syntax highlighting */
:root {
  /* Base colors - default to theme tokens with graceful fallbacks */
  --astro-code-color-text: var(--color-text, #eceae5);
  --astro-code-color-background: var(
    --code-surface,
    color-mix(in srgb, var(--color-text, #eceae5) 5%, transparent)
  );

  /* Default all tokens */
  --astro-code-foreground: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-constant: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-string: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-comment: var(
    --code-comment,
    color-mix(in srgb, var(--color-text, #eceae5) 50%, transparent)
  );
  --astro-code-token-keyword: var(--accent, var(--color-accent, #eec35e));
  --astro-code-token-parameter: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-function: color-mix(
    in srgb,
    var(--accent, var(--color-accent, #eec35e)) 70%,
    transparent
  );
  --astro-code-token-string-expression: var(--accent, var(--color-accent, #eec35e));
  --astro-code-token-punctuation: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-link: var(--accent, var(--color-accent, #eec35e));

  /* Additional token types */
  --astro-code-token-namespace: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-tag: var(--accent, var(--color-accent, #eec35e));
  --astro-code-token-selector: var(--accent, var(--color-accent, #eec35e));
  --astro-code-token-attribute: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-attribute-name: color-mix(
    in srgb,
    var(--accent, var(--color-accent, #eec35e)) 70%,
    transparent
  );
  --astro-code-token-variable: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-literal: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-number: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-unit: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-symbol: var(--foreground, var(--color-text, #eceae5));
  --astro-code-token-regex: var(--accent, var(--color-accent, #eec35e));
  --astro-code-token-boolean: var(--accent, var(--color-accent, #eec35e));
  --astro-code-token-important: var(--accent, var(--color-accent, #eec35e));

  /* Additional variables for code styling */
  --comment: var(
    --code-comment,
    color-mix(in srgb, var(--color-text, #eceae5) 50%, transparent)
  );
}

/* Override Astro's default code block styles */
.astro-code {
  background: var(
      --code-surface,
      color-mix(
        in srgb,
        var(--color-text, #eceae5) 5%,
        transparent
      )
    )
    !important;
  border: 1px solid var(
      --code-border,
      color-mix(
        in srgb,
        var(--color-text, #eceae5) 25%,
        transparent
      )
    )
    !important;
  padding: 20px 10px !important;
}

/* Override inline styles for specific token types */

/* Force all text to be white by default */
.astro-code,
.astro-code span {
  color: var(--foreground, var(--color-text, #eceae5)) !important;
}

/* Default foreground/white text */
.astro-code span[style*="--astro-code-foreground"],
.astro-code span[style*="--astro-code-token-punctuation"],
.astro-code span[style*="--astro-code-token-constant"],
.astro-code span[style*="--astro-code-token-string"],
.astro-code span[style*="--astro-code-token-parameter"],
.astro-code span[style*="--astro-code-token-variable"],
.astro-code span[style*="--astro-code-token-literal"],
.astro-code span[style*="--astro-code-token-number"] {
  color: var(--foreground, var(--color-text, #eceae5)) !important;
}

/* Full orange for keywords, tags, string expressions */
.astro-code span[style*="--astro-code-token-keyword"],
.astro-code span[style*="--astro-code-token-string-expression"],
.astro-code span[style*="--astro-code-token-tag"],
.astro-code span[style*="--astro-code-token-selector"],
.astro-code span[style*="--astro-code-token-regex"],
.astro-code span[style*="--astro-code-token-boolean"],
.astro-code span[style*="--astro-code-token-important"] {
  color: var(--accent, var(--color-accent, #eec35e)) !important;
}

/* 70% opacity orange for attribute names (using token-function in HTML) */
.astro-code span[style*="--astro-code-token-function"] {
  color: var(--accent, var(--color-accent, #eec35e)) !important;
  opacity: 0.7;
}

/* Muted comments */
.astro-code span[style*="--astro-code-token-comment"] {
  color: var(
      --code-comment,
      color-mix(in srgb, var(--color-text, #eceae5) 50%, transparent)
    )
    !important;
}

/* Line highlighting */
.highlight-line {
  display: block;
  margin: 0 -10px;
  padding: 0 10px;
  background: color-mix(
    in srgb,
    var(--accent, var(--color-accent, #eec35e)) 10%,
    transparent
  );
  border-left: 3px solid var(--accent, var(--color-accent, #eec35e));
}

/* Diff highlighting */
.token.deleted {
  color: var(--diff-removed, #b91c1c) !important;
  background: var(
    --diff-removed-soft,
    color-mix(
      in srgb,
      var(--diff-removed, #b91c1c) 16%,
      transparent
    )
  )
    !important;
}

.token.inserted {
  color: var(--diff-added, #15803d) !important;
  background: var(
    --diff-added-soft,
    color-mix(
      in srgb,
      var(--diff-added, #15803d) 16%,
      transparent
    )
  )
    !important;
}

/* Inline code in different contexts */
.post-content code,
.page code {
  word-break: break-word;
}

/* Code block containers */
.code-toolbar {
  position: relative;
}

.code-toolbar .toolbar {
  position: absolute;
  top: 10px;
  right: 10px;
  display: flex;
  gap: 5px;
}

.code-toolbar .toolbar-item button {
  background: transparent;
  border: 1px solid var(--accent, var(--color-accent, #eec35e));
  color: var(--accent, var(--color-accent, #eec35e));
  padding: 2px 8px;
  font-size: calc(var(--font-size) * 0.8);
  cursor: pointer;
  transition: all 0.15s linear;
}

.code-toolbar .toolbar-item button:hover {
  background: color-mix(
    in srgb,
    var(--accent, var(--color-accent, #eec35e)) 15%,
    transparent
  );
}