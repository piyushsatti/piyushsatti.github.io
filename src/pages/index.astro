---
import BaseLayout from '../layouts/BaseLayout.astro';
import PostCard from '../components/PostCard.astro';
import { getCollection } from 'astro:content';

const base = import.meta.env.BASE_URL.endsWith('/') ? import.meta.env.BASE_URL : import.meta.env.BASE_URL + '/';

// Blog posts (theme expects 'posts')
const posts = (await getCollection('posts'))
  .filter(p => !p.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3);

// Projects (custom collection)
const projects = (await getCollection('projects'))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 2);
---

<BaseLayout title="Terminal">
  <div class="index-content framed">
    <h1 id="hello-there">Piyush Satti</h1>
    <p>Backend Developer &amp; M.Sc. — Java • Spring Boot • GraphQL • FastAPI</p>
    <p>I build typed, testable backends, clean domain models, and fast feedback loops.</p>
    <p>
      <a href={`${base}projects`}>Projects</a> ::
      <a href={`${base}research`}>Research</a> ::
      <a href={`${base}blog`}>Blog</a> ::
      <a href={`${base}resume.pdf`} target="_blank" rel="noopener noreferrer">Resume</a>
    </p>
  </div>

  <div class="posts">
    <h2 class="posts-title">Featured Projects</h2>
    <ul>
      {projects.map(p => (
        <li>
          <a href={`${base}projects/${p.id}/`}>{p.data.title}</a>
          <span> — {p.data.summary}</span>
        </li>
      ))}
    </ul>
  </div>

  <div class="posts">
    <h2 class="posts-title">Latest Posts</h2>
    {posts.length === 0 ? (
      <p>No posts yet. Check back soon!</p>
    ) : (
      posts.map((post) => <PostCard post={post} />)
    )}
  </div>
</BaseLayout>
