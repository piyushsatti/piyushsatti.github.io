---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Post from "../../components/Post.astro";

export async function getStaticPaths() {
  const entries = (await getCollection("blog")).sort(
    (a, b) =>
      new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
  );

  return entries.map((entry, index) => ({
    params: { slug: entry.slug },
    props: {
      entry,
      prevEntry: index < entries.length - 1 ? entries[index + 1] : null,
      nextEntry: index > 0 ? entries[index - 1] : null,
    },
  }));
}

const { entry, prevEntry, nextEntry } = Astro.props;
const { Content } = await entry.render();
const base = import.meta.env.BASE_URL.endsWith("/")
  ? import.meta.env.BASE_URL
  : import.meta.env.BASE_URL + "/";

const links = entry.data.externalLink
  ? [{ label: "Original", href: entry.data.externalLink, external: true }]
  : [];

const meta = entry.data.author
  ? [{ label: "Author", value: entry.data.author }]
  : [];

const tags = entry.data.tags ?? [];
---

<BaseLayout
  title={entry.data.title}
  description={entry.data.description}
  image={entry.data.image}
>
  <Post
    title={entry.data.title}
    description={entry.data.description}
    variant="blog"
    summary={entry.data.description}
    heroImage={entry.data.image}
    heroImageAlt={entry.data.imageAlt}
    heroImageCaption={entry.data.imageCaption}
    pubDate={entry.data.pubDate}
    tags={tags}
    meta={meta}
    links={links}
    Content={Content}
  />

  <div class="pagination">
    <div class="pagination__title">
      <span class="pagination__title-h">Read other posts</span>
      <hr />
    </div>
    <div class="pagination__buttons">
      {
        prevEntry && (
          <>
            <a
              href={`${base}blog/${prevEntry.slug}/`}
              class="button inline prev"
            >
              &lt; [<span class="button__text">{prevEntry.data.title}</span>]
            </a>
            {prevEntry && nextEntry && <span>::</span>}
          </>
        )
      }
      {
        nextEntry && (
          <a href={`${base}blog/${nextEntry.slug}/`} class="button inline next">
            [<span class="button__text">{nextEntry.data.title}</span>] &gt;
          </a>
        )
      }
    </div>
  </div>
</BaseLayout>
