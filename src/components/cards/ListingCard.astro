---
import FormattedDate from "../FormattedDate.astro";

export interface ActionLink {
  label: string;
  href: string;
  external?: boolean;
}

type MetaEntry =
  | string
  | number
  | { kind: "date"; value: Date }
  | { kind: "text"; value: string };

export interface Props {
  title: string;
  href: string;
  external?: boolean;
  summary?: string;
  meta?: MetaEntry[];
  tags?: string[];
  actions?: ActionLink[];
  ctaLabel?: string;
}

const {
  title,
  href,
  external = false,
  summary,
  meta = [],
  tags = [],
  actions = [],
  ctaLabel = "View details →",
} = Astro.props as Props;
---

<article class="listing-card">
  <header class="listing-card__header">
    <h3 class="listing-card__title">
      <a
        href={href}
        target={external ? "_blank" : undefined}
        rel={external ? "noopener" : undefined}
      >
        {title}
      </a>
    </h3>

    {
      meta.length > 0 && (
        <div class="listing-card__meta">
          {meta.map((item) => (
            <span class="listing-card__meta-item">
              {typeof item === "string" || typeof item === "number" ? (
                item
              ) : item.kind === "date" ? (
                <FormattedDate date={item.value} />
              ) : (
                item.value
              )}
            </span>
          ))}
        </div>
      )
    }
  </header>

  {
    tags.length > 0 && (
      <div class="listing-card__tags">
        <b>Tags:</b> {tags.join(" • ")}
      </div>
    )
  }

  {
    summary && (
      <p class="listing-card__summary">
        <b>Summary:</b> {summary}
      </p>
    )
  }

  <footer class="listing-card__footer">
    <a
      href={href}
      class="listing-card__cta"
      target={external ? "_blank" : undefined}
      rel={external ? "noopener" : undefined}
    >
      {ctaLabel}
    </a>
    {
      actions.length > 0 && (
        <span class="listing-card__links">
          {actions.map((link, index) => (
            <>
              <a
                href={link.href}
                target={link.external ? "_blank" : undefined}
                rel={link.external ? "noopener" : undefined}
              >
                {link.label}
              </a>
              {index < actions.length - 1 && (
                <span class="listing-card__divider">·</span>
              )}
            </>
          ))}
        </span>
      )
    }
  </footer>
</article>

<style>
  .listing-card {
    border: 1px solid var(--accent);
    border-radius: 6px;
    padding: 1rem 1.25rem;
    margin-bottom: 1.5rem;
    background: rgba(0, 0, 0, 0.25);
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .listing-card__title {
    font-size: 1.25rem;
    margin: 0;
  }

  .listing-card__title a {
    text-decoration: none;
  }

  .listing-card__meta {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    font-size: 0.85rem;
    color: var(--muted-text, #ccc);
  }

  .listing-card__summary {
    margin: 0;
    font-size: 0.95rem;
    line-height: 1.5;
  }

  .listing-card__tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.35rem 0.6rem;
    font-size: 0.8rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .listing-card__footer {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.5rem 1rem;
    font-size: 0.85rem;
  }

  .listing-card__cta {
    color: var(--accent);
    text-decoration: none;
    font-weight: 600;
  }

  .listing-card__links a {
    color: var(--text-color, #fff);
    text-decoration: none;
  }

  .listing-card__links a:hover,
  .listing-card__cta:hover {
    text-decoration: underline;
  }

  .listing-card__divider {
    margin: 0 0.25rem;
    opacity: 0.6;
  }

  @media (max-width: 640px) {
    .listing-card {
      padding: 0.85rem 1rem;
    }

    .listing-card__title {
      font-size: 1.1rem;
    }
  }
</style>
